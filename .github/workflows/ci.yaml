name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
    - 'v*.*.*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20, 1.21]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}

    - name: Install Go tools
      run: |
        set -e
        go install mvdan.cc/gofumpt@latest
        go install golang.org/x/tools/cmd/goimports@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        go install golang.org/x/vuln/cmd/govulncheck@latest
        go install github.com/google/go-licenses@latest
        go install github.com/orhun/git-cliff/cmd/git-cliff@latest
        go install github.com/goreleaser/goreleaser@latest

    - name: Format check
      run: gofumpt -l .

    - name: Lint
      run: golangci-lint run

    - name: Test
      run: go test ./... -v

    - name: Vulnerability check
      run: govulncheck ./...

    - name: Licenses
      run: go-licenses csv ./... | tee licenses.csv

    - name: Generate changelog
      run: git-cliff -c .gitcliff.toml -o CHANGELOG.md
      env:
        REPO: ${{ github.repository }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Go tools
      run: |
        set -e
        go install github.com/orhun/git-cliff/cmd/git-cliff@latest
        go install github.com/goreleaser/goreleaser@latest

    - name: Generate changelog
      run: git-cliff -c .gitcliff.toml -o CHANGELOG.md
      env:
        REPO: ${{ github.repository }}

    - name: Create Release (goreleaser)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: goreleaser release --rm-dist
