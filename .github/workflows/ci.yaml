name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
    - 'v*.*.*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20, 1.21]
    env:
      # Ensure go install puts binaries into $HOME/go/bin and that path is available
      GOPATH: ${{ runner.home }}/go
      PATH: ${{ runner.home }}/go/bin:${{ env.PATH }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Debug - show go info
      run: |
        echo "go version: $(go version)"
        echo "which go: $(which go || true)"
        echo "GOPATH=${GOPATH}"
        echo "PATH=${PATH}"

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}

    - name: Install Go tools
      run: |
        set -euo pipefail
        export GOPATH="${GOPATH:-$HOME/go}"
        export PATH="$GOPATH/bin:$PATH"
        echo "Installing tools into $GOPATH/bin"
        # use @latest or pin versions (recommended to pin for stable CI)
        go install mvdan.cc/gofumpt@latest
        go install golang.org/x/tools/cmd/goimports@latest
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        go install golang.org/x/vuln/cmd/govulncheck@latest
        go install github.com/google/go-licenses@latest
        go install github.com/orhun/git-cliff/cmd/git-cliff@latest
        go install github.com/goreleaser/goreleaser@latest

    - name: Format check
      run: gofumpt -l .

    - name: Lint
      run: golangci-lint run

    - name: Test
      run: go test ./... -v

    - name: Vulnerability check
      run: govulncheck ./...

    - name: Licenses
      run: go-licenses csv ./... | tee licenses.csv

    - name: Generate changelog
      run: git-cliff -c .gitcliff.toml -o CHANGELOG.md
      env:
        REPO: ${{ github.repository }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    env:
      GOPATH: ${{ runner.home }}/go
      PATH: ${{ runner.home }}/go/bin:${{ env.PATH }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Show go info
      run: |
        echo "go version: $(go version)"
        echo "GOPATH=${GOPATH}"
        echo "PATH=${PATH}"

    - name: Install Go tools for release
      run: |
        set -euo pipefail
        export GOPATH="${GOPATH:-$HOME/go}"
        export PATH="$GOPATH/bin:$PATH"
        go install github.com/orhun/git-cliff/cmd/git-cliff@latest
        go install github.com/goreleaser/goreleaser@latest

    - name: Generate changelog
      run: |
        git-cliff -c .gitcliff.toml -o CHANGELOG.md
        git status --porcelain
        git add CHANGELOG.md || true
        git commit -m "chore(release): update CHANGELOG for ${GITHUB_REF##*/}" || echo "no changes to commit"
      env:
        REPO: ${{ github.repository }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release (goreleaser)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: goreleaser release --rm-dist
